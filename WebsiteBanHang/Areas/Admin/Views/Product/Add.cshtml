@model Product
@using Microsoft.AspNetCore.Mvc.Rendering

<div class="container mt-4">
    <h2>Thêm sản phẩm mới</h2>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <h4>Lỗi validation:</h4>
            <ul>
                @foreach (var modelState in ViewData.ModelState.Values)
                {
                    foreach (var error in modelState.Errors)
                    {
                        <li>@error.ErrorMessage</li>
                    }
                }
            </ul>
        </div>
    }

    <!-- Thêm debug info -->
    @if (Context.Request.Method == "POST")
    {
        <div class="alert alert-info">
            <h4>Debug Info:</h4>
            <p>CategoryId: @Model.CategoryId</p>
            <p>Name: @Model.Name</p>
            <p>Price: @Model.Price</p>
            <p>Quantity: @Model.Quantity</p>
        </div>
    }

    <form asp-area="Admin" asp-controller="Product" asp-action="Add" method="post" enctype="multipart/form-data">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group mb-3">
                    <label asp-for="Name" class="control-label">Tên sản phẩm</label>
                    <input asp-for="Name" class="form-control" required />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Price" class="control-label">Giá</label>
                    <input asp-for="Price" class="form-control" type="number" min="0" required />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Quantity" class="control-label">Số lượng</label>
                    <input asp-for="Quantity" class="form-control" type="number" min="0" required />
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="CategoryId" class="control-label">Danh mục</label>
                    <select asp-for="CategoryId" class="form-control" required>
                        <option value="">-- Chọn danh mục --</option>
                        @foreach (var item in (SelectList)ViewBag.Categories)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Description" class="control-label">Mô tả</label>
                    <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group mb-3">
                    <label for="imageFile" class="control-label">Ảnh sản phẩm</label>
                    <input type="file" id="imageFile" name="imageFile" class="form-control" accept="image/*" onchange="previewMainImage(this);" />
                    <div class="mt-2">
                        <img id="mainImagePreview" src="#" alt="Ảnh xem trước" style="max-width: 200px; display: none;" class="img-thumbnail" />
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save me-1"></i>Lưu
            </button>
            <a asp-area="Admin" asp-controller="Product" asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-times me-1"></i>Hủy
            </a>
        </div>
    </form>
</div>

<!-- Modal để xem ảnh lớn -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body p-0">
                <button type="button" class="btn-close position-absolute top-0 end-0 m-2" 
                        data-bs-dismiss="modal" aria-label="Close"></button>
                <img id="modalImage" src="" class="w-100" alt="Product Image">
            </div>
        </div>
    </div>
</div>

<style>
    .preview-image-container {
        position: relative;
        display: inline-block;
        margin: 5px;
        width: 120px;
        height: 120px;
    }

    .preview-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .remove-preview {
        position: absolute;
        top: -8px;
        right: -8px;
        background: #dc3545;
        color: white;
        border-radius: 50%;
        padding: 4px 8px;
        cursor: pointer;
        font-size: 12px;
    }

    #modalImage {
        max-height: 80vh;
        object-fit: contain;
    }

    #additionalImagesPreview img {
        margin: 5px;
    }

    .img-thumbnail {
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px;
    }

    .position-relative {
        position: relative;
    }

    .remove-image {
        position: absolute;
        top: -10px;
        right: -10px;
        background: red;
        color: white;
        border-radius: 50%;
        padding: 5px 8px;
        cursor: pointer;
    }
</style>

<script>
    function showImageInModal(src) {
        document.getElementById('modalImage').src = src;
    }

    function previewImages(event) {
        const container = document.getElementById('imagePreviewContainer');
        container.innerHTML = ''; // Xóa preview cũ

        const files = event.target.files;
        for (let i = 0; i < files.length; i++) {
            const file = files[i];
            if (file.type.startsWith('image/')) {
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    const div = document.createElement('div');
                    div.className = 'preview-image-container';
                    
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.className = 'preview-image';
                    img.onclick = function() {
                        showImageInModal(this.src);
                    };
                    img.setAttribute('data-bs-toggle', 'modal');
                    img.setAttribute('data-bs-target', '#imageModal');
                    
                    const removeBtn = document.createElement('span');
                    removeBtn.className = 'remove-preview';
                    removeBtn.innerHTML = '×';
                    removeBtn.onclick = function(e) {
                        e.stopPropagation();
                        div.remove();
                    };
                    
                    div.appendChild(img);
                    div.appendChild(removeBtn);
                    container.appendChild(div);
                };
                
                reader.readAsDataURL(file);
            }
        }
    }

    // Xem trước ảnh chính
    function previewMainImage(input) {
        var preview = document.getElementById('mainImagePreview');
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            
            reader.onload = function(e) {
                preview.src = e.target.result;
                preview.style.display = 'block';
            }
            
            reader.readAsDataURL(input.files[0]);
        } else {
            preview.src = '#';
            preview.style.display = 'none';
        }
    }

    // Xem trước các ảnh phụ
    function previewAdditionalImages(input) {
        var preview = document.getElementById('additionalImagesPreview');
        preview.innerHTML = ''; // Xóa các ảnh cũ

        if (input.files) {
            for (var i = 0; i < input.files.length; i++) {
                var reader = new FileReader();
                
                reader.onload = (function(file) {
                    return function(e) {
                        var div = document.createElement('div');
                        div.className = 'position-relative';
                        
                        var img = document.createElement('img');
                        img.src = e.target.result;
                        img.className = 'img-thumbnail';
                        img.style.width = '150px';
                        img.style.height = '150px';
                        img.style.objectFit = 'cover';
                        
                        div.appendChild(img);
                        preview.appendChild(div);
                    };
                })(input.files[i]);
                
                reader.readAsDataURL(input.files[i]);
            }
        }
    }

    // Xóa ảnh khi click vào nút xóa
    function removeImage(element) {
        element.parentElement.remove();
    }

    $(document).ready(function() {
        $('form').on('submit', function(e) {
            if ($('#CategoryId').val() === '') {
                e.preventDefault();
                Swal.fire({
                    title: 'Lỗi!',
                    text: 'Vui lòng chọn danh mục sản phẩm',
                    icon: 'error'
                });
                return false;
            }
        });

        // Validate form trước khi submit
        $('form').on('submit', function(e) {
            if (!$(this).valid()) {
                e.preventDefault();
                console.log('Form validation failed');
                // Log form data
                console.log('CategoryId:', $('#CategoryId').val());
                console.log('Name:', $('#Name').val());
                console.log('Price:', $('#Price').val());
                console.log('Quantity:', $('#Quantity').val());
                return false;
            }
            console.log('Form is valid, submitting...');
        });

        // Hiển thị thông báo lỗi/thành công
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
            Swal.fire({
                title: 'Thành công!',
                text: '@TempData["SuccessMessage"]',
                icon: 'success',
                timer: 2000,
                showConfirmButton: false
            });
            </text>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <text>
            Swal.fire({
                title: 'Lỗi!',
                text: '@TempData["ErrorMessage"]',
                icon: 'error'
            });
            </text>
        }
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
